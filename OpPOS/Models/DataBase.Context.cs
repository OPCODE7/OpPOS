//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OpPOS.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class OpPOSEntities : DbContext
    {
        public OpPOSEntities()
            : base("name=OpPOSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<APP_MODULES> APP_MODULES { get; set; }
        public virtual DbSet<BILL> BILL { get; set; }
        public virtual DbSet<BILL_RANGE> BILL_RANGE { get; set; }
        public virtual DbSet<CLIENTS> CLIENTS { get; set; }
        public virtual DbSet<COMPANY_DATA> COMPANY_DATA { get; set; }
        public virtual DbSet<CORRELATIVES> CORRELATIVES { get; set; }
        public virtual DbSet<EMPLOYEE_USER> EMPLOYEE_USER { get; set; }
        public virtual DbSet<EMPLOYEES> EMPLOYEES { get; set; }
        public virtual DbSet<HORARY> HORARY { get; set; }
        public virtual DbSet<INVENTORY> INVENTORY { get; set; }
        public virtual DbSet<INVENTORY_CARDEX> INVENTORY_CARDEX { get; set; }
        public virtual DbSet<INVENTORY_ENTRIES> INVENTORY_ENTRIES { get; set; }
        public virtual DbSet<INVENTORY_ENTRY_DETAILS> INVENTORY_ENTRY_DETAILS { get; set; }
        public virtual DbSet<INVENTORY_EXIT_DETAILS> INVENTORY_EXIT_DETAILS { get; set; }
        public virtual DbSet<INVENTORY_EXITS> INVENTORY_EXITS { get; set; }
        public virtual DbSet<ISV_TYPES> ISV_TYPES { get; set; }
        public virtual DbSet<JOB_POSITIONS> JOB_POSITIONS { get; set; }
        public virtual DbSet<LOGBOOK_APP> LOGBOOK_APP { get; set; }
        public virtual DbSet<PRODUCTS> PRODUCTS { get; set; }
        public virtual DbSet<ROLE_PERMISSIONS> ROLE_PERMISSIONS { get; set; }
        public virtual DbSet<SALE_DETAILS> SALE_DETAILS { get; set; }
        public virtual DbSet<SALES> SALES { get; set; }
        public virtual DbSet<SUPPLIERS> SUPPLIERS { get; set; }
        public virtual DbSet<SYSTEM_LICENSE> SYSTEM_LICENSE { get; set; }
        public virtual DbSet<USER_PERMISSIONS> USER_PERMISSIONS { get; set; }
        public virtual DbSet<USER_ROLES> USER_ROLES { get; set; }
        public virtual DbSet<USERS> USERS { get; set; }
        public virtual DbSet<EMPLOYEE_SALARY> EMPLOYEE_SALARY { get; set; }
        public virtual DbSet<SALARIES> SALARIES { get; set; }
    
        public virtual int LogAction(string userCode, string actionType, string logDescription, string module, Nullable<System.DateTime> insertedAt)
        {
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            var actionTypeParameter = actionType != null ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(string));
    
            var logDescriptionParameter = logDescription != null ?
                new ObjectParameter("LogDescription", logDescription) :
                new ObjectParameter("LogDescription", typeof(string));
    
            var moduleParameter = module != null ?
                new ObjectParameter("Module", module) :
                new ObjectParameter("Module", typeof(string));
    
            var insertedAtParameter = insertedAt.HasValue ?
                new ObjectParameter("InsertedAt", insertedAt) :
                new ObjectParameter("InsertedAt", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LogAction", userCodeParameter, actionTypeParameter, logDescriptionParameter, moduleParameter, insertedAtParameter);
        }
    
        public virtual ObjectResult<SP_GET_COMPANY_DATA_Result> SP_GET_COMPANY_DATA()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_COMPANY_DATA_Result>("SP_GET_COMPANY_DATA");
        }
    
        public virtual ObjectResult<SP_GET_SUPPLIERS_Result> SP_GET_SUPPLIERS(string searchFilter, Nullable<bool> isDel)
        {
            var searchFilterParameter = searchFilter != null ?
                new ObjectParameter("SearchFilter", searchFilter) :
                new ObjectParameter("SearchFilter", typeof(string));
    
            var isDelParameter = isDel.HasValue ?
                new ObjectParameter("IsDel", isDel) :
                new ObjectParameter("IsDel", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_SUPPLIERS_Result>("SP_GET_SUPPLIERS", searchFilterParameter, isDelParameter);
        }
    
        public virtual ObjectResult<SP_GET_EMPLOYEES_Result> SP_GET_EMPLOYEES(string searchFilter, Nullable<bool> isDel)
        {
            var searchFilterParameter = searchFilter != null ?
                new ObjectParameter("SearchFilter", searchFilter) :
                new ObjectParameter("SearchFilter", typeof(string));
    
            var isDelParameter = isDel.HasValue ?
                new ObjectParameter("IsDel", isDel) :
                new ObjectParameter("IsDel", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_EMPLOYEES_Result>("SP_GET_EMPLOYEES", searchFilterParameter, isDelParameter);
        }
    
        public virtual ObjectResult<SP_GET_HORARY_Result> SP_GET_HORARY(string searchFilter, Nullable<bool> isDel)
        {
            var searchFilterParameter = searchFilter != null ?
                new ObjectParameter("SearchFilter", searchFilter) :
                new ObjectParameter("SearchFilter", typeof(string));
    
            var isDelParameter = isDel.HasValue ?
                new ObjectParameter("IsDel", isDel) :
                new ObjectParameter("IsDel", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_HORARY_Result>("SP_GET_HORARY", searchFilterParameter, isDelParameter);
        }
    
        public virtual ObjectResult<SP_GET_SALARIES_Result> SP_GET_SALARIES(string searchFilter, Nullable<bool> isDel)
        {
            var searchFilterParameter = searchFilter != null ?
                new ObjectParameter("SearchFilter", searchFilter) :
                new ObjectParameter("SearchFilter", typeof(string));
    
            var isDelParameter = isDel.HasValue ?
                new ObjectParameter("IsDel", isDel) :
                new ObjectParameter("IsDel", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_SALARIES_Result>("SP_GET_SALARIES", searchFilterParameter, isDelParameter);
        }
    }
}
